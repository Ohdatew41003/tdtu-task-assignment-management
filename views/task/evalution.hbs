<!-- views/dashboard.hbs -->
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Dashboard Công Việc</title>
    <link rel="stylesheet" href="/css/style.css" />
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #007bff;
            color: white;
            padding: 20px;
            text-align: center;
        }

        header h1 {
            margin: 0;
            font-size: 24px;
        }

        nav ul {
            list-style: none;
            padding: 0;
            text-align: center;
            margin: 15px 0 0 0;
        }

        nav ul li {
            display: inline-block;
            margin: 0 10px;
        }

        nav ul li a,
        nav ul li form button {
            color: white;
            text-decoration: none;
            font-size: 16px;
            padding: 10px 15px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        nav ul li a {
            background-color: #0056b3;
        }

        nav ul li a:hover {
            background-color: #003366;
        }

        nav ul li form button {
            background-color: #dc3545;
        }

        nav ul li form button:hover {
            background-color: #c82333;
        }

        .container {
            padding: 30px;
            max-width: 900px;
            margin: auto;
        }

        .task-dashboard h2 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }

        .task {
            background: white;
            border: 1px solid #dee2e6;
            border-left: 5px solid #0d6efd;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .task h3 {
            margin-top: 0;
            margin-bottom: 10px;
        }

        .status {
            font-weight: bold;
            text-transform: uppercase;
        }

        .status.IN_PROGRESS {
            color: orange;
        }

        .status.COMPLETED {
            color: green;
        }

        .status.PENDING {
            color: gray;
        }

        .progress-bar {
            background-color: #e9ecef;
            border-radius: 5px;
            overflow: hidden;
            margin-top: 5px;
            height: 10px;
        }

        .progress-bar-inner {
            height: 100%;
            background-color: #0d6efd;
            transition: width 0.3s ease;
        }

        p {
            margin: 5px 0;
        }

        /* CSS cho nút "Cập nhật & Upload tài liệu" */
        .btn-update-progress {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 14px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
            margin-top: 10px;
            display: inline-block;
        }

        .btn-update-progress:hover {
            background-color: #0056b3;
        }

        /* CSS cho modal overlay */
        #modalOverlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        /* CSS cho popup modal */
        #updateProgressModal {
            display: none;
            position: fixed;
            top: 10%;
            left: 50%;
            transform: translateX(-50%);
            width: 400px;
            background: #fff;
            border-radius: 8px;
            padding: 20px 25px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            font-family: Arial, sans-serif;
        }

        /* Tiêu đề modal */
        #updateProgressModal h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-weight: 600;
            color: #333;
            text-align: center;
        }

        /* Form trong modal */
        #updateProgressModal form label {
            display: block;
            margin-bottom: 12px;
            font-size: 14px;
            color: #555;
        }

        /* Input và textarea */
        #updateProgressModal input[type="number"],
        #updateProgressModal textarea,
        #updateProgressModal input[type="file"] {
            width: 100%;
            padding: 8px 10px;
            border: 1.5px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
            box-sizing: border-box;
            resize: vertical;
            font-family: Arial, sans-serif;
        }

        #updateProgressModal textarea {
            height: 60px;
        }

        /* Nút lưu cập nhật */
        #updateProgressModal button[type="submit"] {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px 18px;
            border-radius: 5px;
            font-size: 15px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-right: 10px;
        }

        #updateProgressModal button[type="submit"]:hover {
            background-color: #218838;
        }

        /* Nút đóng modal */
        #updateProgressModal button#closeModal {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 10px 18px;
            border-radius: 5px;
            font-size: 15px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #updateProgressModal button#closeModal:hover {
            background-color: #c82333;
        }

        /* Responsive cho modal khi màn hình nhỏ */
        @media (max-width: 450px) {
            #updateProgressModal {
                width: 90%;
                padding: 15px 20px;
            }
        }

        #openEvaluationBtn {
            padding: 10px 20px;
            background-color: #007bff;
            /* màu xanh dương */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #openEvaluationBtn:hover {
            background-color: #0056b3;
            /* màu xanh đậm khi hover */
        }

        /* Overlay chung */
        #updateModalOverlay,
        #evaluationModalOverlay {
            display: none;
            /* Mặc định ẩn */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            /* nền mờ */
            z-index: 999;
        }

        /* Modal chung */
        #updateProgressModal,
        #evaluationModal {
            display: none;
            /* Mặc định ẩn */
            position: fixed;
            top: 10%;
            left: 50%;
            transform: translateX(-50%);
            background: #fff;
            padding: 20px 25px;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            max-width: 400px;
            width: 90%;
            font-family: Arial, sans-serif;
        }

        /* Tiêu đề modal */
        #updateProgressModal h3,
        #evaluationModal h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 1.4em;
            color: #333;
        }

        /* Label và input */
        #updateProgressModal label,
        #evaluationModal label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #555;
        }

        #updateProgressModal input[type="number"],
        #updateProgressModal textarea,
        #evaluationModal select,
        #evaluationModal textarea {
            width: 100%;
            padding: 7px 10px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            resize: vertical;
            font-size: 1em;
            font-family: inherit;
        }

        /* Nút bấm */
        #updateProgressModal button,
        #evaluationModal button {
            margin-top: 15px;
            padding: 10px 18px;
            background-color: #007bff;
            border: none;
            border-radius: 4px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #updateProgressModal button:hover,
        #evaluationModal button:hover {
            background-color: #0056b3;
        }

        /* Nút đóng modal dạng dấu X */
        #closeEvaluationModal {
            float: right;
            font-size: 22px;
            font-weight: bold;
            color: #999;
            cursor: pointer;
            user-select: none;
        }

        #closeEvaluationModal:hover {
            color: #333;
        }

        /* Nút đóng modal cập nhật tiến độ */
        #closeUpdateModal {
            background-color: #6c757d;
            margin-left: 10px;
        }

        #closeUpdateModal:hover {
            background-color: #5a6268;
        }

        #evaluationContainer {
            margin-top: 20px;
            padding: 0;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #fafafa;
            max-height: 500px;
            /* Giới hạn chiều cao */
            overflow-y: auto;
            /* Cho cuộn */
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 14px;
            color: #333;
        }

        /* Table Header */
        #evaluationContainer::before {
            content: "📋 Lịch sử đánh giá";
            display: block;
            background-color: #f0f0f0;
            padding: 12px 16px;
            font-weight: bold;
            font-size: 16px;
            border-bottom: 1px solid #ddd;
        }

        /* Mỗi evaluation là 1 row */
        .evaluation {
            display: grid;
            grid-template-columns: 2fr 1.2fr 1fr 2fr 2fr;
            gap: 12px;
            padding: 12px 16px;
            border-bottom: 1px solid #e6e6e6;
            align-items: start;
            transition: background-color 0.2s ease;
        }

        /* Hover hiệu ứng */
        .evaluation:hover {
            background-color: #f9f9f9;
        }

        /* Title task hiển thị đẹp */
        .evaluation h4 {
            grid-column: 1 / -1;
            /* Chiếm toàn dòng */
            font-size: 15px;
            margin: 0 0 10px 0;
            color: #222;
            font-weight: 600;
            border-left: 4px solid #3498db;
            padding-left: 8px;
        }

        /* Format p */
        .evaluation p {
            margin: 0;
            font-size: 14px;
            line-height: 1.4;
        }

        .evaluation strong {
            color: #555;
            font-weight: 600;
        }

        .btn-view-evaluation {
            display: inline-block;
            background-color: #cb7f05;
            color: white;
            padding: 10px 18px;
            border-radius: 5px;
            text-decoration: none;
            font-size: 15px;
            font-weight: 600;
            transition: background-color 0.3s ease;
            text-align: center;
        }

        .btn-view-evaluation:hover {
            background-color: #c92f08;
        }
    </style>
</head>

<body data-userid="{{user.userId}}">

    <!-- Modal cập nhật tiến độ -->
    <div id="updateProgressModal"
        style="display:none; position:fixed; top:10%; left:50%; transform:translateX(-50%); background:#fff; padding:20px; border:1px solid #ccc; z-index:1000; max-width:400px;">
        <h3>Cập nhật tiến độ công việc</h3>
        <form id="updateProgressForm">
            <input type="hidden" name="progressId" id="progressId" />
            <label>Tiến độ (%): <input type="number" name="progressPercentage" id="progressPercentage" min="0" max="100"
                    required /></label><br />
            <label>Vấn đề (nếu có): <textarea name="issues" id="issues" rows="3"></textarea></label><br />
            <label>Tải lên tài liệu: <input type="file" name="attachment" id="attachment" /></label><br />
            <button type="submit">Lưu cập nhật</button>
            <button type="button" id="closeUpdateModal">Đóng</button>
        </form>
    </div>
    <div id="updateModalOverlay"
        style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:999;">
    </div>

    <!-- Modal đánh giá công việc -->
    <div id="evaluationModal" class="modal"
        style="display:none; position:fixed; top:10%; left:50%; transform:translateX(-50%); background:#fff; padding:20px; border:1px solid #ccc; z-index:1000; max-width:400px;">
        <div class="modal-content">
            <span id="closeEvaluationModal" class="close"
                style="cursor:pointer; float:right; font-size:20px;">&times;</span>
            <h3>Đánh giá công việc</h3>
            <form id="evaluationForm">
                <input type="hidden" id="evalTaskId" name="taskId" />
                <input type="hidden" id="evalEvaluatorId" name="evaluatorId" />
                <label for="rating">Đánh giá:</label>
                <select id="rating" name="rating" required>
                    <option value="">Chọn mức đánh giá</option>
                    <option value="NotCompleted">Chưa hoàn thành</option>
                    <option value="Weak">Yếu</option>
                    <option value="Completed">Hoàn thành</option>
                    <option value="Active">Hoạt động</option>
                    <option value="Good">Tốt</option>
                    <option value="Excellent">Xuất sắc</option>
                </select>
                <label for="comment">Bình luận:</label>
                <textarea id="comment" name="comment" rows="3"></textarea>
                <label for="improvementSuggestions">Gợi ý cải thiện:</label>
                <textarea id="improvementSuggestions" name="improvementSuggestions" rows="3"></textarea>
                <button type="submit">Gửi đánh giá</button>
            </form>
        </div>
    </div>
    <div id="evaluationModalOverlay"
        style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:999;">
    </div>

    <!-- Header -->
    <header>
        <h1>Dashboard Công Việc</h1>
        <nav>
            <ul>
                <li><a href="/api/admin/index">Trang Admin</a></li>
                <li><a href="/api/users/user">Quản lý người dùng</a></li>
                <li><a href="/api/tasks/task">Quản lý đầu việc</a></li>
                <li><a href="/api/tasks/dashboard">Quản lý công việc</a></li>
                <li><a href="/api/tasks/evalution">Đánh giá</a></li>
                <li><a href="/api/extensionRequest/extensionRequest">Gia hạn</a></li>
                <li>
                    <form action="/api/auth/logout" method="POST">
                        <button type="submit">Đăng Xuất</button>
                    </form>
                </li>
            </ul>
        </nav>
    </header>
    <div style="text-align: center; margin-top: 20px;">
        <a href="/api/evaluations/lecturerEvaluation" class="btn-view-evaluation">
            Xem đánh giá giảng viên
        </a>
    </div>



    <!-- Main Container -->
    <div class="container">
        <section class="task-dashboard">
            <h2>Danh Sách Công Việc để đánh giá</h2>
            {{#each taskProgressList}}
            <div class="task" data-progressid="{{progressId}}" data-taskid="{{taskId}}" data-userid="{{reportedById}}">
                <h3>Công việc ID: {{taskId}}</h3>
                <p><strong>Người báo cáo:</strong> {{reportedById}}</p>
                <p><strong>Mô tả:</strong> {{description}}</p>
                <p><strong>Trạng thái:</strong>
                    {{#if (eq progressPercentage 100)}}
                    <span class="status COMPLETED">COMPLETED</span>
                    {{else if (gt progressPercentage 0)}}
                    <span class="status IN_PROGRESS">IN_PROGRESS</span>
                    {{else}}
                    <span class="status PENDING">PENDING</span>
                    {{/if}}
                </p>
                <p><strong>Tiến độ:</strong> {{progressPercentage}}%</p>
                <div class="progress-bar">
                    <div class="progress-bar-inner"
                        style="width: {{progressPercentage}}%; background-color: {{#if (eq progressPercentage 100)}}green{{else}}#007bff{{/if}};">
                    </div>
                </div>
                <p><strong>Ngày báo cáo:</strong> {{formatDate reportDate}}</p>
                {{#if issues}}
                <p><strong>Vấn đề:</strong> {{issues}}</p>
                {{/if}}
                {{#if attachment}}
                <p><strong>File đính kèm:</strong>
                    <a href="{{attachment.url}}" target="_blank" download>{{attachment.filename}}</a>
                </p>
                {{/if}}
                <button class="btn-open-evaluation">Đánh giá công việc</button>
            </div>
            {{/each}}
        </section>

        <!-- Evaluation List -->
        <h2>Lịch sử đánh giá</h2>

        <div id="evaluationContainer">


            <!-- Có thể có nhiều evaluation-item -->
        </div>

    </div>

    <!-- JS Logic -->
    <script>
        let users = [], tasks = [], taskProcess = [], documents = [];

        async function loadAllData() {
            try {
                const [tasksRes, usersRes, documentsRes] = await Promise.all([
                    fetch('/api/tasks/get'),
                    fetch('/api/users/get'),
                    fetch('/api/documents/get')
                ]);

                tasks = await tasksRes.json();
                users = await usersRes.json();
                documents = await documentsRes.json();

                await loadTaskProgress();
                await loadEvaluations();
            } catch (error) {
                console.error('Lỗi khi load dữ liệu:', error);
            }
        }

        async function loadTaskProgress() {
            try {
                const response = await fetch('/api/taskProgress/get');
                const jsonData = await response.json();
                taskProcess = Array.isArray(jsonData) ? jsonData : jsonData.data;
                renderTaskProgress(taskProcess);
            } catch (error) {
                console.error('Lỗi khi tải tiến độ:', error);
            }
        }

        function renderTaskProgress(tasksProgress) {
            const container = document.querySelector('.task-dashboard');
            container.innerHTML = '<h2>Danh Sách Công Việc để đánh giá</h2>';

            tasksProgress.forEach(taskProgress => {
                const task = tasks.find(t => t.taskId === taskProgress.taskId);
                const taskTitle = task ? task.title : `Công việc ID: ${taskProgress.taskId}`;
                const user = users.find(u => u.userId === taskProgress.reportedById);
                const fullName = user ? user.fullName : `Người báo cáo ID: ${taskProgress.reportedById}`;

                const statusClass = taskProgress.progressPercentage === 100 ? 'COMPLETED' :
                    taskProgress.progressPercentage > 0 ? 'IN_PROGRESS' : 'PENDING';
                const formattedDate = new Date(taskProgress.reportDate).toLocaleDateString('vi-VN');

                let fileAttachmentHTML = '';
                if (typeof taskProgress.attachment === 'string' && taskProgress.attachment.trim() !== '') {
                    const documentObj = documents.find(doc => doc.documentId === taskProgress.attachment);
                    fileAttachmentHTML = documentObj
                        ? `<p><strong>File đính kèm:</strong>
                             <a href="/api/taskProgress/${taskProgress.progressId}/download" target="_blank" download>${documentObj.title}</a></p>`
                        : `<p><strong>File đính kèm:</strong> Không tìm thấy document</p>`;
                }

                const taskHTML = `
                <div class="task" data-progressid="${taskProgress.progressId}" data-taskid="${taskProgress.taskId}" data-userid="${taskProgress.reportedById}">
                    <h3>${taskTitle}</h3>
                    <p><strong>Người báo cáo:</strong> ${fullName}</p>
                    <p><strong>Mô tả:</strong> ${taskProgress.description}</p>
                    <p><strong>Trạng thái:</strong> <span class="status ${statusClass}">${statusClass}</span></p>
                    <p><strong>Tiến độ:</strong> ${taskProgress.progressPercentage}%</p>
                    <div class="progress-bar">
                        <div class="progress-bar-inner" style="width: ${taskProgress.progressPercentage}%; background-color: ${taskProgress.progressPercentage === 100 ? 'green' : '#007bff'};"></div>
                    </div>
                    <p><strong>Ngày báo cáo:</strong> ${formattedDate}</p>
                    ${taskProgress.issues ? `<p><strong>Vấn đề:</strong> ${taskProgress.issues}</p>` : ''}
                    ${fileAttachmentHTML}
                    <button class="btn-open-evaluation">Đánh giá công việc</button>
                </div>`;

                container.innerHTML += taskHTML;
            });

            document.querySelectorAll('.btn-open-evaluation').forEach(button => {
                button.addEventListener('click', function () {
                    const taskElement = this.closest('.task');
                    const taskId = taskElement.getAttribute('data-taskid');
                    const evaluatorId = document.body.getAttribute('data-userid');

                    document.getElementById('evalTaskId').value = taskId;
                    document.getElementById('evalEvaluatorId').value = evaluatorId;

                    document.getElementById('evaluationModal').style.display = 'block';
                    document.getElementById('evaluationModalOverlay').style.display = 'block';
                });
            });
        }

        async function loadEvaluations() {
            try {
                const response = await fetch('/api/evaluations/get');
                const evaluations = await response.json();
                const container = document.getElementById('evaluationContainer');
                container.innerHTML = '';

                if (evaluations.length === 0) {
                    container.innerHTML = '<p>Chưa có dữ liệu đánh giá nào.</p>';
                    return;
                }

                evaluations.forEach(evaluation => {
                    const task = tasks.find(t => t.taskId === evaluation.taskId);
                    const evaluator = users.find(u => u.userId === evaluation.evaluatorId);

                    const taskTitle = task ? task.title : `Task ID: ${evaluation.taskId}`;
                    const evaluatorName = evaluator ? evaluator.fullName : `Evaluator ID: ${evaluation.evaluatorId}`;

                    const evalHTML = `
                    <div class="evaluation">
                        <h4>${taskTitle}</h4>
                        <p><strong>Người đánh giá:</strong> ${evaluatorName}</p>
                        <p><strong>Đánh giá:</strong> ${evaluation.rating}</p>
                        <p><strong>Bình luận:</strong> ${evaluation.comment}</p>
                        <p><strong>Gợi ý cải thiện:</strong> ${evaluation.improvementSuggestions}</p>
                    </div>`;

                    container.innerHTML += evalHTML;
                });
            } catch (error) {
                console.error('Lỗi khi tải đánh giá:', error);
            }
        }

        // Close modal khi nhấn X
        document.getElementById('closeEvaluationModal').addEventListener('click', () => {
            document.getElementById('evaluationModal').style.display = 'none';
            document.getElementById('evaluationModalOverlay').style.display = 'none';
        });

        // Submit form đánh giá
        document.getElementById('evaluationForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = {
                taskId: document.getElementById('evalTaskId').value,
                evaluatorId: document.getElementById('evalEvaluatorId').value,
                rating: document.getElementById('rating').value,
                comment: document.getElementById('comment').value,
                improvementSuggestions: document.getElementById('improvementSuggestions').value
            };

            try {
                const response = await fetch('/api/evaluations/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    alert('Đánh giá đã được gửi!');
                    loadEvaluations();
                    document.getElementById('evaluationModal').style.display = 'none';
                    document.getElementById('evaluationModalOverlay').style.display = 'none';
                } else {
                    alert('Lỗi khi gửi đánh giá.');
                }
            } catch (error) {
                console.error('Lỗi khi gửi đánh giá:', error);
                alert('Lỗi khi gửi đánh giá.');
            }
        });

        // Khởi động khi trang load
        document.addEventListener('DOMContentLoaded', loadAllData);
    </script>
</body>