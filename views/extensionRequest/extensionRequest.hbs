<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8" />
    <title>Đề nghị và Phê duyệt gia hạn</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-align: center;
        }

        section {
            padding: 20px;
            max-width: 900px;
            margin: 20px auto;
        }

        .form-container,
        .list-container {
            background-color: #f9f9f9;
            padding: 20px 30px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        h2 {
            color: #333;
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 6px;
            font-weight: bold;
            color: #444;
        }

        select,
        textarea,
        input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-family: Arial, sans-serif;
        }

        button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #218838;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
            font-weight: bold;
        }

        .btn-approve {
            background-color: #007bff;
            margin-right: 10px;
        }

        .btn-approve:hover {
            background-color: #0056b3;
        }

        .btn-reject {
            background-color: #dc3545;
        }

        .btn-reject:hover {
            background-color: #a71d2a;
        }

        header {
            background-color: #007bff;
            color: white;
            padding: 20px;
            text-align: center;
        }

        header h1 {
            margin: 0;
            font-size: 24px;
        }

        nav ul {
            list-style: none;
            padding: 0;
            text-align: center;
        }

        nav ul li {
            display: inline-block;
            margin: 0 10px;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-size: 16px;
            padding: 10px 15px;
            background-color: #0056b3;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        nav ul li a:hover {
            background-color: #003366;
        }

        nav ul li form button {
            padding: 10px 15px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        nav ul li form button:hover {
            background-color: #c82333;
        }
    </style>
</head>

<body>

    <header>
        <h1>Đề Nghị & Phê Duyệt Gia Hạn Công Việc</h1>
        <nav>
            <ul>
                <li><a href="/api/admin/index">Trang Admin</a></li>
                <li><a href="/api/users/user">Quản lý người dùng</a></li>
                <li><a href="/api/tasks/task">Quản lý đầu việc</a></li>
                <li><a href="/api/tasks/dashboard">Quản lý công việc</a></li>
                <li><a href="/api/tasks/evalution">Đánh giá</a></li>
                <li><a href="/api/extensionRequest/extensionRequest">Gia hạn</a></li>
                <li>
                    <form action="/api/auth/logout" method="POST">
                        <button type="submit">Đăng Xuất</button>
                    </form>
                </li>
            </ul>
        </nav>
    </header>

    <section>

        <div class="form-container">
            <h2>Form Yêu Cầu Gia Hạn</h2>
            <form id="extensionRequestForm">
                <label for="taskSelect">Chọn công việc</label>
                <select id="taskSelect" name="taskId" required>
                    <option value="">-- Đang tải danh sách công việc --</option>

                </select>

                <label for="proposeNewEndDate">Thời hạn đề xuất mới</label>
                <input type="date" id="proposeNewEndDate" name="proposeNewEndDate" required />

                <label for="reason">Lý do yêu cầu gia hạn</label>
                <textarea id="reason" name="reason" rows="4" placeholder="Nhập lý do gia hạn..." required></textarea>

                <button type="submit">Gửi yêu cầu</button>
            </form>
            <div id="formMessage" style="color: green; margin-top: 10px;"></div>
        </div>

        <!-- Danh sách yêu cầu gia hạn (Phê duyệt) -->
        <div class="list-container">
            <h2>Danh Sách Yêu Cầu Gia Hạn (Phê duyệt)</h2>
            <table id="extensionRequestList">
                <thead>
                    <tr>
                        <th>Công việc</th>
                        <th>Người yêu cầu</th>
                        <th>Lý do</th>
                        <th>Ngày yêu cầu</th>
                        <th>Trạng thái</th> <!-- Thêm cột trạng thái -->
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody id="extensionRequestListBody">
                    <!-- Dữ liệu sẽ được thêm bằng JS -->
                </tbody>
            </table>
        </div>



    </section>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const taskSelect = document.getElementById('taskSelect');
            const formMessage = document.getElementById('formMessage');
            const extensionRequestListBody = document.getElementById('extensionRequestListBody');
            const extensionRequestForm = document.getElementById('extensionRequestForm');

            // Hàm format ngày theo kiểu Việt Nam
            function formatDate(dateString) {
                const d = new Date(dateString);
                return d.toLocaleDateString('vi-VN');
            }

            // Hàm lấy danh sách công việc và fill vào select
            async function loadTasks() {
                try {
                    const response = await fetch('/api/taskExtensionRequestRoutes/task-assignments');
                    if (!response.ok) throw new Error('Lấy danh sách công việc thất bại');

                    const tasks = await response.json(); // [{ taskId, taskTitle, progressId }, ...]
                    taskSelect.innerHTML = '<option value="">-- Chọn công việc --</option>';
                    tasks.forEach(task => {
                        const option = document.createElement('option');
                        option.value = task.taskId;
                        option.textContent = task.taskTitle;
                        option.dataset.requestedById = task.progressId || '';
                        taskSelect.appendChild(option);
                    });
                } catch (error) {
                    console.error('Lỗi khi lấy công việc:', error);
                    taskSelect.innerHTML = '<option value="">Không thể tải danh sách công việc</option>';
                }
            }

            // Hàm lấy danh sách yêu cầu gia hạn và render bảng
            async function loadExtensionRequests() {
                try {
                    const res = await fetch('/api/taskExtensionRequestRoutes/getname');
                    if (!res.ok) throw new Error('Lấy danh sách yêu cầu thất bại');

                    const extensionRequests = await res.json();
                    extensionRequestListBody.innerHTML = ''; // Xóa dữ liệu cũ

                    extensionRequests.forEach(req => {
                        const tr = document.createElement('tr');
                        tr.innerHTML = `
                    <td>${req.taskId || ''}</td>
                    <td>${req.requestedById || ''}</td>
                    <td>${req.reason || ''}</td>
                    <td>${req.status || ''}</td>
                    <td>${formatDate(req.createdAt)}</td>
                    <td>
                        <button class="btn-approve" data-id="${req.extensionRequestId}">Đồng ý</button>
                        <button class="btn-reject" data-id="${req.extensionRequestId}">Từ chối</button>
                    </td>
                `;
                        extensionRequestListBody.appendChild(tr);
                    });

                    attachApprovalHandlers(); // Gán sự kiện cho nút đồng ý/từ chối
                } catch (error) {
                    console.error(error);
                    alert('Lỗi khi tải danh sách yêu cầu gia hạn');
                }
            }

            // Hàm gán sự kiện cho nút duyệt/từ chối
            function attachApprovalHandlers() {
                document.querySelectorAll('.btn-approve').forEach(btn => {
                    btn.onclick = async (e) => {
                        const id = e.target.dataset.id;

                        try {
                            const res = await fetch(`/api/taskExtensionRequestRoutes/${id}/approve`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    status: 'Approved',
                                    adminComment: '',          // nếu cần có thể thêm dữ liệu khác
                                    progressDescription: '',
                                    progressPercentage: null,
                                })
                            });

                            if (res.ok) {
                                alert('Đã duyệt yêu cầu');
                                loadExtensionRequests();
                            } else alert('Duyệt yêu cầu thất bại');
                        } catch (error) {
                            console.error(error);
                            alert('Lỗi duyệt yêu cầu');
                        }
                    };
                });

                document.querySelectorAll('.btn-reject').forEach(btn => {
                    btn.onclick = async (e) => {
                        const id = e.target.dataset.id;
                        try {
                            const res = await fetch(`/api/taskExtensionRequestRoutes/${id}/reject`, { method: 'POST' });
                            if (res.ok) {
                                alert('Đã từ chối yêu cầu');
                                loadExtensionRequests();
                            } else alert('Từ chối yêu cầu thất bại');
                        } catch (error) {
                            console.error(error);
                            alert('Lỗi từ chối yêu cầu');
                        }
                    };
                });
            }

            // Xử lý gửi form yêu cầu gia hạn
            extensionRequestForm.addEventListener('submit', async e => {
                e.preventDefault();

                const taskId = taskSelect.value;
                const proposeNewEndDate = document.getElementById('proposeNewEndDate').value;
                const reason = document.getElementById('reason').value.trim();

                const selectedOption = taskSelect.options[taskSelect.selectedIndex];
                const taskProgressId = selectedOption ? selectedOption.dataset.requestedById || '' : '';

                if (!taskId || !reason.trim() || !proposeNewEndDate || !taskProgressId) {
                    console.log('Thiếu thông tin:', {
                        taskId,
                        reason: reason.trim(),
                        proposeNewEndDate,
                        taskProgressId
                    });

                    alert('Vui lòng chọn công việc, nhập lý do và ngày kết thúc đề xuất');
                    return;
                }


                try {
                    const res = await fetch('/api/taskExtensionRequestRoutes/create', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ taskId, proposeNewEndDate, reason, taskProgressId })
                    });

                    if (res.ok) {
                        formMessage.textContent = 'Gửi yêu cầu thành công';
                        e.target.reset();
                        setTimeout(() => location.reload(), 1500);


                    } else {
                        const data = await res.json();
                        alert('Lỗi: ' + (data.message || 'Gửi yêu cầu thất bại'));
                    }
                } catch (error) {
                    console.error(error);
                    alert('Lỗi khi gửi yêu cầu');
                }
            });

            // Khởi tạo dữ liệu khi load trang
            loadTasks();
            loadExtensionRequests();
        });
    </script>


</body>

</html>